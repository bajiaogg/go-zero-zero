// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"go-zero-zero/service/user/rpc/internal/logic"
	"go-zero-zero/service/user/rpc/internal/svc"
	"go-zero-zero/service/user/rpc/pb"
)

type UserRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserRpcServer
}

func NewUserRpcServer(svcCtx *svc.ServiceContext) *UserRpcServer {
	return &UserRpcServer{
		svcCtx: svcCtx,
	}
}

//  用户模块
func (s *UserRpcServer) Register(ctx context.Context, in *pb.RegisterReq) (*pb.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserRpcServer) Login(ctx context.Context, in *pb.LoginReq) (*pb.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserRpcServer) UserInfo(ctx context.Context, in *pb.GetSingleUserInfoReq) (*pb.GetSingleUserInfoResp, error) {
	l := logic.NewUserInfoLogic(ctx, s.svcCtx)
	return l.UserInfo(in)
}

func (s *UserRpcServer) MultipleUserInfo(ctx context.Context, in *pb.GetMultipleUserInfoReq) (*pb.GetMultipleUserInfoResp, error) {
	l := logic.NewMultipleUserInfoLogic(ctx, s.svcCtx)
	return l.MultipleUserInfo(in)
}

func (s *UserRpcServer) GenerateToken(ctx context.Context, in *pb.GenerateTokenReq) (*pb.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}

//  地址
func (s *UserRpcServer) CreateAddress(ctx context.Context, in *pb.CreateAddressReq) (*pb.SaveAddressResp, error) {
	l := logic.NewCreateAddressLogic(ctx, s.svcCtx)
	return l.CreateAddress(in)
}

func (s *UserRpcServer) UpdateAddress(ctx context.Context, in *pb.UpdateAddressReq) (*pb.SaveAddressResp, error) {
	l := logic.NewUpdateAddressLogic(ctx, s.svcCtx)
	return l.UpdateAddress(in)
}

func (s *UserRpcServer) DeleteAddress(ctx context.Context, in *pb.DeleteAddressReq) (*pb.DeleteAddressResp, error) {
	l := logic.NewDeleteAddressLogic(ctx, s.svcCtx)
	return l.DeleteAddress(in)
}

func (s *UserRpcServer) AddressList(ctx context.Context, in *pb.GetAddressListReq) (*pb.GetAddressListResp, error) {
	l := logic.NewAddressListLogic(ctx, s.svcCtx)
	return l.AddressList(in)
}
